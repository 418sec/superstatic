#!/usr/bin/env node

var updateNotifier = require('update-notifier');
var compare = require('compare-semver');
var format = require('chalk');
var stringLength = require('string-length');

var Cli = require('../lib/cli');
var pkg = require('../package.json');

var updateCheckInterval = 1000 * 60 * 60 * 24 * 7; // 1 week

var notifier = updateNotifier({
  packageName: pkg.name,
  packageVersion: pkg.version,
  updateCheckInterval: updateCheckInterval
});

if (notifier.update) {
  notify(notifier.update);
}

var cli = Cli();

cli.run(process.argv, function () {
  
  console.log('\nSuperstatic started on port ' + cli.get('port'));
});

// NOTE: Custom notify function because update-notifier runs in
// a child process, and we block this when running the server
function notify (package) {
  
  if (!compare.gt(package.current, [package.latest])) {
    
    var msg = [
      format.bold.yellow('A new version of Superstatic is available'),
      '',
      'Your current version is ' + format.green.bold(package.current) + '.',
      'The latest version is ' + format.green.bold(package.latest) + '.',
      '', 
      'Run ' + format.bold.yellow('npm install superstatic -g') + ' to update.',
    ];
    
    var contentWidth = 0;
    msg = msg
      .map(function (line) {
        
        return '  ' + line;// + format.yellow('│');
      });
    
    msg.forEach(function (line) {
        
        if (stringLength(line) > contentWidth) {
          contentWidth = stringLength(line);
        }
      });
    
    var fill = function (str, count) {
      return Array(count + 1).join(str);
    };
    
    var top = format.yellow('┌' + fill('─', contentWidth) + '┐');
    var bottom = format.yellow('└' + fill('─', contentWidth) + '┘');
    
    console.log('');
    console.log(top);
    console.log(msg.join('\n'));
    console.log(bottom);
    console.log('');
  }
}